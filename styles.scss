@use "sass:math";

body 
{
    margin: 0;
    overflow: hidden;
}

@for $b from 1 through 2
{
    $base-color: rgb(244, 82, 53);
    @if $b == 2
    {
        $base-color: rgb(53, 139, 244);
    }

    .button#{$b}
    {
        width: 5em;
        height: 5em;

        transform: rotateX(40deg);
        z-index: 2;

        position: absolute;

        bottom: 5em;
        left: #{$b * 2 * 5 - 5}em;

        border: none;
        background-color: transparent;
        cursor: pointer;

        @for $i from 1 through 5
        {
            .button-layer#{$i}
            {
                width: 5em;
                height: 5em;

                background-color: lighten($base-color, $i * 1.75%);

                position: absolute;

                transition: 0.2s;
                
                :hover > &
                {
                    background-color: lighten($base-color, $i * 2.5%);
                }

                @if $i != 1
                {
                    transform: translateY(-#{math.div($i, 2) - 0.5}em);
        
                    :active > &
                    {
                        transform: translateY(-#{math.div($i - 1, 4)}em);
                    }
                } @else 
                {
                    outline: 0.75em solid white;
                    box-shadow: 0 0 20px 0 rgb(154, 151, 151);
                }

                border-radius: 2.5em;
            }
        }
    }

    .tooltip#{$b}
    {
        position: absolute;
        bottom: 6.5em;
        left: #{0.5 + ($b - 1) * 8.35}em;

        z-index: 2;

        width: 10em;
        height: 10em;

        opacity: 0;
        transition: 0.2s;

        :hover > & 
        {
            opacity: 1;
        }

        .info-bubble 
        {
            height: 8em;
            width: 12.5em;

            animation: info-bubble 0.5s infinite linear;
        }

        p 
        {
            position: absolute;
            top: -0.75em;
            left: 0em;

            font-size: 1.6em;

            height: 3.5em;
            width: 7.5em;

            display: flex;
            align-items: center;
            justify-content: center;

            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            font-weight: 700;
            font-style: italic;
        }
    }
}

@keyframes info-bubble 
{
    0%
    {
        content: url("svg/info1.svg");
    }

    33%
    {
        content: url("svg/info2.svg");
    }

    66%
    {
        content: url("svg/info3.svg");
    }

    100%
    {
        content: url("svg/info1.svg");
    }
}

.game-boxes 
{
    position: absolute;

    width: 100vw;
    height: 100vh;

    display: flex;
    align-items: center;
    justify-content: center;
}

.dev 
{   
    left: 30%;
    top: 30%;

    transform-style: preserve-3d;
    transition: transform 1s cubic-bezier(.82, -0.74, .36, 1.56);
    transform: rotateX(-30deg) rotateY(20deg) translateY(10em) translateX(9em);

    &.hidden 
    {
        transform: rotateX(0deg) rotateY(0deg) translateY(50vh) translateX(9em);
    }

    height: 0;

    .face1 
    {
        height: 7em;
        width: 30em;

        background-size: cover;
        background-color: #F1F3F2;
        background-image: url("svg/face2.svg");
    }

    .face2 
    {
        height: 15em;
        width: 30em;

        background-size: contain;
        background-repeat: no-repeat;
        background-image: url("svg/face1.svg");

        transform: rotateX(90deg) translateZ(14.5em) translateY(-7.5em);
    }

    .bottom-shadow 
    {
        height: 15em;
        width: 30em;

        box-shadow: 0 0 15em 0 rgba(0, 0, 0, 0.1);

        transform: rotateX(90deg) translateZ(29.5em) translateY(-7.5em);
    }

    .face3 
    {
        height: 7em;
        width: 15em;

        background-size: cover;
        background-image: url("svg/face3.svg");

        transform: rotateY(90deg) translateX(7.5em) translateY(-22em) translateZ(-7.5em);
    }

    .face 
    {
        transition: 0.2s ease;

        :hover > &
        {
            cursor: pointer;
            filter: brightness(105%);
        }

        box-shadow: 0 0 0.5em 0 rgba(74, 74, 74, 0.05) inset;
    }
}

.upcoming 
{
    left: 30%;
    top: 30%;

    transform-style: preserve-3d;
    transition: transform 1s 0.05s cubic-bezier(.82, -0.74, .36, 1.56);
    transform: rotateX(-30deg) rotateY(10deg) translateY(0em) translateX(-10em) translateZ(-10.5em);

    &.hidden 
    {
        transform: rotateX(30deg) rotateY(0deg) translateX(-10em) translateZ(-10.5em) translateY(50vh);
    }

    height: 0;

    .face1 
    {
        height: 12em;
        width: 12em;

        background-size: cover;
        background-image: url("svg/face2-2.svg");

        transform: translateX(0em) translateY(0em) translateZ(0em);
    }

    .face2 
    {
        height: 12em;
        width: 12em;

        background-size: contain;
        background-repeat: no-repeat;
        background-image: url("svg/face1-2.svg");

        transform: rotateX(90deg) translateZ(18em) translateY(-6em) translateX(0em);
    }

    .bottom-shadow 
    {
        height: 12em;
        width: 12em;

        box-shadow: 0 0 2em 0 rgba(0, 0, 0, 0.3);

        transform: rotateX(90deg) translateZ(30em) translateY(-6em) translateX(0em);
    }

    .face3 
    {
        height: 12em;
        width: 12em;

        background-color: #36383C;

        transform: rotateY(90deg) translateX(6em) translateY(-24em) translateZ(-6em);
    }

    .face 
    {
        transition: 0.2s ease;

        :hover > &
        {
            cursor: pointer;
            filter: brightness(105%);
        }

        box-shadow: 0 0 0.5em 0 rgba(255, 255, 255, 0.05) inset;
    }
}